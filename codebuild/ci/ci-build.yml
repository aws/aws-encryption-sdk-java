version: 0.2

env:
  variables:
    REGION: us-east-1
    DOMAIN: crypto-tools-internal
    REPOSITORY: java-esdk-ci
    NAMESPACE: com.amazonaws
    PACKAGE: aws-encryption-sdk-java
  parameter-store:
    ACCOUNT: /CodeBuild/AccountId
  secrets-manager:
    GPG_KEY: Maven-GPG-Keys-Credentials:Keyname
    GPG_PASS: Maven-GPG-Keys-Credentials:Passphrase
  exported-variables:
    VERSION_HASH
#  This can *probably* only be used with CodePipelines

phases:
  install:
    runtime-versions:
      java: openjdk11
  pre_build:
    commands:
      - export SETTINGS_FILE=$(pwd)/codebuild/release/settings.xml
      - export CODEARTIFACT_TOKEN=$(aws codeartifact get-authorization-token --domain $DOMAIN --domain-owner $ACCOUNT --query authorizationToken --output text --region ${REGION})
      - export CODEARTIFACT_REPO_URL=https://${DOMAIN}-${ACCOUNT}.d.codeartifact.${REGION}.amazonaws.com/maven/${REPOSITORY}
      - aws secretsmanager get-secret-value --region us-west-2 --secret-id Maven-GPG-Keys --query SecretBinary --output text | base64 -d > ~/mvn_gpg.tgz
      - tar -xvf ~/mvn_gpg.tgz -C ~
  build:
    commands:
      - VERSION_HASH="$(mvn help:evaluate -Dexpression=project.version -q -DforceStdout)-$CODEBUILD_RESOLVED_SOURCE_VERSION"
#      See https://docs.aws.amazon.com/codebuild/latest/userguide/build-env-ref-env-vars.html
      - echo "Setting version in POM to $VERSION_HASH"
      - mvn versions:set -DnewVersion="$VERSION_HASH"
      - echo "Version is now $(grep version pom.xml | head -n 1 | sed -n 's/[ \t]*<version>\(.*\)<\/version>/\1/p')"
      - |
        mvn deploy \
          -PpublishingCodeArtifact \
          -Pfast-tests-only \
          -DperformRelease \
          -Dgpg.homedir="$HOME/mvn_gpg" \
          -DautoReleaseAfterClose=true \
          -Dgpg.keyname="$GPG_KEY" \
          -Dgpg.passphrase="$GPG_PASS" \
          -Dcodeartifact.token=$CODEARTIFACT_TOKEN \
          -DaltDeploymentRepository=codeartifact::default::$CODEARTIFACT_REPO_URL \
          -s $SETTINGS_FILE
  post_build:
    commands:
      - |
        if expr ${CODEBUILD_BUILD_SUCCEEDING} != 1; then
          echo "An error occured while building and uploading $REPOSITORY."
          echo "Did a previous build batch already upload $VERSION_HASH to $REPOSITORY?"
          echo "Try deleting $VERSION_HASH from $REPOSITORY and restart batch"
          echo "Delete Package Version Command \n
            aws codeartifact delete-package-versions --domain $DOMAIN \
              --repository $REPOSITORY \
              --format maven \
              --namespace $NAMESPACE \
              --package $PACKAGE \
              --versions $VERSION_HASH \
              --region $REGION";
        fi
batch:
  fast-fail: false
  build-graph:
    - identifier: static_analysis
      buildspec: codebuild/ci/static-analysis.yml
      env:
        env:
        image: aws/codebuild/amazonlinux2-x86_64-standard:3.0
    - identifier: ci_build
      depend-on:
        - static_analysis
      buildspec: codebuild/ci/ci-build.yml
      env:
        env:
        image: aws/codebuild/standard:3.0
    - identifier: validate_ci_openjdk8
      depend-on:
        - ci_build
      buildspec: codebuild/ci/validate-ci.yml
      env:
        variables:
          JAVA_ENV_VERSION: openjdk8
          JAVA_NUMERIC_VERSION: 8
        env:
        image: aws/codebuild/standard:3.0
    - identifier: validate_ci_openjdk11
      depend-on:
        - ci_build
      buildspec: codebuild/ci/validate-ci.yml
      env:
        variables:
          JAVA_ENV_VERSION: openjdk11
          JAVA_NUMERIC_VERSION: 11
        image: aws/codebuild/standard:3.0
    - identifier: validate_ci_corretto8
      depend-on:
        - ci_build
      buildspec: codebuild/ci/validate-ci.yml
      env:
        variables:
          JAVA_ENV_VERSION: corretto8
          JAVA_NUMERIC_VERSION: 8
        image: aws/codebuild/amazonlinux2-x86_64-standard:3.0
    - identifier: validate_ci_corretto11
      depend-on:
        - ci_build
      buildspec: codebuild/ci/validate-ci.yml
      env:
        variables:
          JAVA_ENV_VERSION: corretto11
          JAVA_NUMERIC_VERSION: 11
        image: aws/codebuild/amazonlinux2-x86_64-standard:3.0
